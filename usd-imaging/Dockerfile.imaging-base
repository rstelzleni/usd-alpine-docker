FROM alpine AS builder
WORKDIR /src

RUN apk update \
  && apk upgrade \
  && apk add --no-cache \
    alpine-sdk \
    boost-dev \
    ccache \
    clang \
    clang-dev \
    cmake \
    curl \
    git \
    linux-headers \
    onetbb \
    onetbb-dev \
    'python3<3.13' \
    'python3-dev<3.13' \
    py3-jinja2

# Get some imaging specific dependencies

RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
      mesa \
      mesa-dev \
      opencl \
      opencl-dev \
      opensubdiv \
      opensubdiv-dev \
      py3-opengl \
      py3-pyside6 \
      pyside6 \
      pyside6-dev

# Build USD with imaging

RUN git clone --single-branch  -b v25.05.01-alpine --depth 1 https://github.com/rstelzleni/USD

RUN mkdir /src/USD-build
WORKDIR /src/USD-build

RUN cmake \
    -DPXR_ENABLE_MATERIALX_SUPPORT=FALSE \
    -DPXR_BUILD_USDVIEW=FALSE \
    -DPXR_BUILD_TESTS=FALSE \
    -DPXR_BUILD_EXAMPLES=FALSE \
    -DPXR_BUILD_DOCUMENTATION=FALSE \
    -DPXR_BUILD_TUTORIALS=FALSE \
    -DCMAKE_INSTALL_PREFIX=/opt/USD \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_CXX_FLAGS="-Os -s" \
    /src/USD

RUN cmake --build . --config Release --target install -j8

# Before shipping a new version uncomment below to run tests. Tests also need
# to be enabled in the cmake command above. See the notes for the most recent
# version in the docs folder for any source changes needed to get tests passing
# in our container.
#
# Since builds are repeatable once they're passing we can disable to save time
# on docker builds.
#
#ENV DISPLAY=:1
#RUN apk add --no-cache \
#    glfw mesa-dri-gallium py3-opengl py3-pip xinit xrandr xterm xvfb
#RUN pip install --break-system-packages glfw
#RUN xinit -- /usr/bin/Xvfb :1 -screen 0 1024x768x24 & 
#RUN ctest -O test.log --output-on-failure

# Make the trimmed down image

FROM alpine
COPY --from=builder /opt /opt
ENV PYTHONPATH=/opt/USD/lib/python

RUN apk update \
  && apk upgrade \
  && apk add --no-cache \
    boost-python3 \
    onetbb \
    opencl \
    opensubdiv \
    'python3<3.13'

ENTRYPOINT [ "/opt/USD/bin/usdcat" ]

